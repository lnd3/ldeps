if(NOT DEFINED deps_bs OR deps_bs)
add_custom_target(bs SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/bs/cmake/bs.cmake)
set_target_properties(bs PROPERTIES FOLDER "Deps/thirdparty/bs")
endif()

if(NOT DEFINED deps_jsonxx OR deps_jsonxx)
############################ jsonxx ############################
file(GLOB_RECURSE jsonxx_inc ${CMAKE_CURRENT_SOURCE_DIR}/jsonxx/jsonxx/jsonxx.h)
file(GLOB_RECURSE jsonxx_src ${CMAKE_CURRENT_SOURCE_DIR}/jsonxx/jsonxx/jsonxx.cc)

add_library(jsonxx STATIC ${jsonxx_inc} ${jsonxx_src})
target_include_directories(jsonxx PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/jsonxx)
set_target_properties(jsonxx PROPERTIES FOLDER "Deps/thirdparty/jsonxx")

target_compile_definitions(jsonxx PUBLIC cxx_std_17)
if(MSVC)
	target_compile_options(jsonxx PRIVATE /W1)
else()
	target_compile_options(jsonxx PRIVATE -Werror)
endif()
endif()

if(NOT DEFINED deps_curl OR deps_curl)
############################ CURL ############################
set(BUILD_SHARED_LIBS False)
set(BUILD_STATIC_LIBS True)
set(BUILD_TESTING False)
#set(CURL_CA_FALLBACK On)
set(CURL_ENABLE_SSL True)
set(ENABLE_WEBSOCKETS True)

if(WIN32)
	set(CURL_USE_SCHANNEL True)
	set(CURL_WINDOWS_SSPI True)
	set(USE_WIN32_LDAP True)
endif()

#set(ENABLE_CURL_DEBUG On)
#set(ENABLE_DEBUG On)
#set(ENABLE_UNIX_SOCKETS On)
set(ENABLE_WEBSOCKETS True)
add_subdirectory(curl)
set_target_properties(curl PROPERTIES FOLDER "Deps/thirdparty/curl")

if(TARGET curl_uninstall)
	set_target_properties(curl_uninstall PROPERTIES FOLDER "Deps/thirdparty/curl")
endif()
if(TARGET libcurl_static)
	set_target_properties(libcurl_static PROPERTIES FOLDER "Deps/thirdparty/curl")
endif()
if(TARGET libcurl_object)
	set_target_properties(libcurl_object PROPERTIES FOLDER "Deps/thirdparty/curl")
	target_compile_definitions(libcurl_object PUBLIC CURL_ENABLE_SSL USE_WINDOWS_SSPI USE_SCHANNEL)
endif()
if(TARGET curltool)
	set_target_properties(curltool PROPERTIES FOLDER "Deps/thirdparty/curl")
endif()

endif()

if(NOT DEFINED deps_mongoose OR deps_mongoose)
############################ Mongoose ############################
add_library(mongoose STATIC mongoose/mongoose/mongoose.h mongoose/mongoose/mongoose.c)
target_include_directories(mongoose PUBLIC mongoose)
set_target_properties(mongoose PROPERTIES FOLDER "Deps/thirdparty/mongoose")

target_compile_definitions(mongoose PUBLIC cxx_std_17)
if(MSVC)
	target_compile_options(mongoose PRIVATE /W0)
else()
	target_compile_options(mongoose PRIVATE -Werror)
endif()
endif()

if(NOT DEFINED deps_portaudio OR deps_portaudio)
############################ Mongoose ############################

set(PA_BUILD_EXAMPLES False)

add_subdirectory(portaudio/portaudio)
set_target_properties(PortAudio PROPERTIES FOLDER "Deps/thirdparty/portaudio")
set_target_properties(uninstall PROPERTIES FOLDER "Deps/thirdparty/portaudio")

if(PA_BUILD_EXAMPLES)
set_target_properties(pa_devs PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(pa_fuzz PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_ocean_shore PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_pink PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_read_write_wire PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_record PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_record_file PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_saw PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_sine PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_wmme_ac3 PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_wmme_surround PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_write_sine PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_write_sine_nonint PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
set_target_properties(paex_sine_c++ PROPERTIES FOLDER "Deps/thirdparty/portaudio/examples")
endif()

target_compile_definitions(PortAudio PUBLIC cxx_std_14)
if(MSVC)
	target_compile_options(PortAudio PRIVATE /W3)
else()
	target_compile_options(PortAudio PRIVATE -w)
endif()
endif()

if(NOT DEFINED deps_ed25519 OR deps_ed25519)
############################ deps_ed25519 ############################
file(GLOB_RECURSE ed25519_inc ${CMAKE_CURRENT_SOURCE_DIR}/ed25519/ed25519/src/*.h)
file(GLOB_RECURSE ed25519_src ${CMAKE_CURRENT_SOURCE_DIR}/ed25519/ed25519/src/*.c)
SOURCE_GROUP(TREE ${CMAKE_CURRENT_SOURCE_DIR}/ed25519/ed25519/src PREFIX ed25519 FILES ${ed25519_inc})

add_library(ed25519 STATIC ${ed25519_inc} ${ed25519_src})
target_include_directories(ed25519 PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/ed25519)
set_target_properties(ed25519 PROPERTIES FOLDER "Deps/thirdparty/ed25519")

if(MSVC)
	target_compile_options(ed25519 PRIVATE /W1)
else()
	target_compile_options(ed25519 PRIVATE -Werror)
endif()
endif()